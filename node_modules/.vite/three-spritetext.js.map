{
  "version": 3,
  "sources": ["../three-spritetext/dist/three-spritetext.module.js", "dep:three-spritetext"],
  "sourcesContent": ["import { LinearFilter, Sprite, SpriteMaterial, Texture } from 'three';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar three = typeof window !== 'undefined' && window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  LinearFilter: LinearFilter,\n  Sprite: Sprite,\n  SpriteMaterial: SpriteMaterial,\n  Texture: Texture\n};\n\nvar _default = /*#__PURE__*/function (_three$Sprite) {\n  _inherits(_default, _three$Sprite);\n\n  var _super = _createSuper(_default);\n\n  function _default() {\n    var _this;\n\n    var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var textHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'rgba(255, 255, 255, 1)';\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, new three.SpriteMaterial());\n    _this._text = \"\".concat(text);\n    _this._textHeight = textHeight;\n    _this._color = color;\n    _this._backgroundColor = false; // no background color\n\n    _this._padding = 0;\n    _this._borderWidth = 0;\n    _this._borderRadius = 0;\n    _this._borderColor = 'white';\n    _this._strokeWidth = 0;\n    _this._strokeColor = 'white';\n    _this._fontFace = 'Arial';\n    _this._fontSize = 90; // defines text resolution\n\n    _this._fontWeight = 'normal';\n    _this._canvas = document.createElement('canvas');\n\n    _this._genCanvas();\n\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"text\",\n    get: function get() {\n      return this._text;\n    },\n    set: function set(text) {\n      this._text = text;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"textHeight\",\n    get: function get() {\n      return this._textHeight;\n    },\n    set: function set(textHeight) {\n      this._textHeight = textHeight;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"color\",\n    get: function get() {\n      return this._color;\n    },\n    set: function set(color) {\n      this._color = color;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"backgroundColor\",\n    get: function get() {\n      return this._backgroundColor;\n    },\n    set: function set(color) {\n      this._backgroundColor = color;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"padding\",\n    get: function get() {\n      return this._padding;\n    },\n    set: function set(padding) {\n      this._padding = padding;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"borderWidth\",\n    get: function get() {\n      return this._borderWidth;\n    },\n    set: function set(borderWidth) {\n      this._borderWidth = borderWidth;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"borderRadius\",\n    get: function get() {\n      return this._borderRadius;\n    },\n    set: function set(borderRadius) {\n      this._borderRadius = borderRadius;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"borderColor\",\n    get: function get() {\n      return this._borderColor;\n    },\n    set: function set(borderColor) {\n      this._borderColor = borderColor;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"fontFace\",\n    get: function get() {\n      return this._fontFace;\n    },\n    set: function set(fontFace) {\n      this._fontFace = fontFace;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"fontSize\",\n    get: function get() {\n      return this._fontSize;\n    },\n    set: function set(fontSize) {\n      this._fontSize = fontSize;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"fontWeight\",\n    get: function get() {\n      return this._fontWeight;\n    },\n    set: function set(fontWeight) {\n      this._fontWeight = fontWeight;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"strokeWidth\",\n    get: function get() {\n      return this._strokeWidth;\n    },\n    set: function set(strokeWidth) {\n      this._strokeWidth = strokeWidth;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"strokeColor\",\n    get: function get() {\n      return this._strokeColor;\n    },\n    set: function set(strokeColor) {\n      this._strokeColor = strokeColor;\n\n      this._genCanvas();\n    }\n  }, {\n    key: \"_genCanvas\",\n    value: function _genCanvas() {\n      var _this2 = this;\n\n      var canvas = this._canvas;\n      var ctx = canvas.getContext('2d');\n      var border = Array.isArray(this.borderWidth) ? this.borderWidth : [this.borderWidth, this.borderWidth]; // x,y border\n\n      var relBorder = border.map(function (b) {\n        return b * _this2.fontSize * 0.1;\n      }); // border in canvas units\n\n      var borderRadius = Array.isArray(this.borderRadius) ? this.borderRadius : [this.borderRadius, this.borderRadius, this.borderRadius, this.borderRadius]; // tl tr br bl corners\n\n      var relBorderRadius = borderRadius.map(function (b) {\n        return b * _this2.fontSize * 0.1;\n      }); // border radius in canvas units\n\n      var padding = Array.isArray(this.padding) ? this.padding : [this.padding, this.padding]; // x,y padding\n\n      var relPadding = padding.map(function (p) {\n        return p * _this2.fontSize * 0.1;\n      }); // padding in canvas units\n\n      var lines = this.text.split('\\n');\n      var font = \"\".concat(this.fontWeight, \" \").concat(this.fontSize, \"px \").concat(this.fontFace);\n      ctx.font = font; // measure canvas with appropriate font\n\n      var innerWidth = Math.max.apply(Math, _toConsumableArray(lines.map(function (line) {\n        return ctx.measureText(line).width;\n      })));\n      var innerHeight = this.fontSize * lines.length;\n      canvas.width = innerWidth + relBorder[0] * 2 + relPadding[0] * 2;\n      canvas.height = innerHeight + relBorder[1] * 2 + relPadding[1] * 2; // paint border\n\n      if (this.borderWidth) {\n        ctx.strokeStyle = this.borderColor;\n\n        if (relBorder[0]) {\n          // left + right borders\n          var hb = relBorder[0] / 2;\n          ctx.lineWidth = relBorder[0];\n          ctx.beginPath();\n          ctx.moveTo(hb, relBorderRadius[0]);\n          ctx.lineTo(hb, canvas.height - relBorderRadius[3]);\n          ctx.moveTo(canvas.width - hb, relBorderRadius[1]);\n          ctx.lineTo(canvas.width - hb, canvas.height - relBorderRadius[2]);\n          ctx.stroke();\n        }\n\n        if (relBorder[1]) {\n          // top + bottom borders\n          var _hb = relBorder[1] / 2;\n\n          ctx.lineWidth = relBorder[1];\n          ctx.beginPath();\n          ctx.moveTo(Math.max(relBorder[0], relBorderRadius[0]), _hb);\n          ctx.lineTo(canvas.width - Math.max(relBorder[0], relBorderRadius[1]), _hb);\n          ctx.moveTo(Math.max(relBorder[0], relBorderRadius[3]), canvas.height - _hb);\n          ctx.lineTo(canvas.width - Math.max(relBorder[0], relBorderRadius[2]), canvas.height - _hb);\n          ctx.stroke();\n        }\n\n        if (this.borderRadius) {\n          // strike rounded corners\n          var cornerWidth = Math.max.apply(Math, _toConsumableArray(relBorder));\n\n          var _hb2 = cornerWidth / 2;\n\n          ctx.lineWidth = cornerWidth;\n          ctx.beginPath();\n          [!!relBorderRadius[0] && [relBorderRadius[0], _hb2, _hb2, relBorderRadius[0]], !!relBorderRadius[1] && [canvas.width - relBorderRadius[1], canvas.width - _hb2, _hb2, relBorderRadius[1]], !!relBorderRadius[2] && [canvas.width - relBorderRadius[2], canvas.width - _hb2, canvas.height - _hb2, canvas.height - relBorderRadius[2]], !!relBorderRadius[3] && [relBorderRadius[3], _hb2, canvas.height - _hb2, canvas.height - relBorderRadius[3]]].filter(function (d) {\n            return d;\n          }).forEach(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 4),\n                x0 = _ref2[0],\n                x1 = _ref2[1],\n                y0 = _ref2[2],\n                y1 = _ref2[3];\n\n            ctx.moveTo(x0, y0);\n            ctx.quadraticCurveTo(x1, y0, x1, y1);\n          });\n          ctx.stroke();\n        }\n      } // paint background\n\n\n      if (this.backgroundColor) {\n        ctx.fillStyle = this.backgroundColor;\n\n        if (!this.borderRadius) {\n          ctx.fillRect(relBorder[0], relBorder[1], canvas.width - relBorder[0] * 2, canvas.height - relBorder[1] * 2);\n        } else {\n          // fill with rounded corners\n          ctx.beginPath();\n          ctx.moveTo(relBorder[0], relBorderRadius[0]);\n          [[relBorder[0], relBorderRadius[0], canvas.width - relBorderRadius[1], relBorder[1], relBorder[1], relBorder[1]], // t\n          [canvas.width - relBorder[0], canvas.width - relBorder[0], canvas.width - relBorder[0], relBorder[1], relBorderRadius[1], canvas.height - relBorderRadius[2]], // r\n          [canvas.width - relBorder[0], canvas.width - relBorderRadius[2], relBorderRadius[3], canvas.height - relBorder[1], canvas.height - relBorder[1], canvas.height - relBorder[1]], // b\n          [relBorder[0], relBorder[0], relBorder[0], canvas.height - relBorder[1], canvas.height - relBorderRadius[3], relBorderRadius[0]] // t\n          ].forEach(function (_ref3) {\n            var _ref4 = _slicedToArray(_ref3, 6),\n                x0 = _ref4[0],\n                x1 = _ref4[1],\n                x2 = _ref4[2],\n                y0 = _ref4[3],\n                y1 = _ref4[4],\n                y2 = _ref4[5];\n\n            ctx.quadraticCurveTo(x0, y0, x1, y1);\n            ctx.lineTo(x2, y2);\n          });\n          ctx.closePath();\n          ctx.fill();\n        }\n      }\n\n      ctx.translate.apply(ctx, _toConsumableArray(relBorder));\n      ctx.translate.apply(ctx, _toConsumableArray(relPadding)); // paint text\n\n      ctx.font = font; // Set font again after canvas is resized, as context properties are reset\n\n      ctx.fillStyle = this.color;\n      ctx.textBaseline = 'bottom';\n      var drawTextStroke = this.strokeWidth > 0;\n\n      if (drawTextStroke) {\n        ctx.lineWidth = this.strokeWidth * this.fontSize / 10;\n        ctx.strokeStyle = this.strokeColor;\n      }\n\n      lines.forEach(function (line, index) {\n        var lineX = (innerWidth - ctx.measureText(line).width) / 2;\n        var lineY = (index + 1) * _this2.fontSize;\n        drawTextStroke && ctx.strokeText(line, lineX, lineY);\n        ctx.fillText(line, lineX, lineY);\n      }); // Inject canvas into sprite\n\n      if (this.material.map) this.material.map.dispose(); // gc previous texture\n\n      var texture = this.material.map = new three.Texture(canvas);\n      texture.minFilter = three.LinearFilter;\n      texture.needsUpdate = true;\n      var yScale = this.textHeight * lines.length + border[1] * 2 + padding[1] * 2;\n      this.scale.set(yScale * canvas.width / canvas.height, yScale, 0);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.text, this.textHeight, this.color).copy(this);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      three.Sprite.prototype.copy.call(this, source);\n      this.color = source.color;\n      this.backgroundColor = source.backgroundColor;\n      this.padding = source.padding;\n      this.borderWidth = source.borderWidth;\n      this.borderColor = source.borderColor;\n      this.fontFace = source.fontFace;\n      this.fontSize = source.fontSize;\n      this.fontWeight = source.fontWeight;\n      this.strokeWidth = source.strokeWidth;\n      this.strokeColor = source.strokeColor;\n      return this;\n    }\n  }]);\n\n  return _default;\n}(three.Sprite);\n\nexport { _default as default };\n", "import d from \"./node_modules/three-spritetext/dist/three-spritetext.module.js\";export default d;"],
  "mappings": ";;;;;;;;;AAEA,yBAAyB,UAAU,aAAa;AAC9C,MAAI,CAAE,qBAAoB,cAAc;AACtC,UAAM,IAAI,UAAU;AAAA;AAAA;AAIxB,2BAA2B,QAAQ,OAAO;AACxC,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAI,aAAa,MAAM;AACvB,eAAW,aAAa,WAAW,cAAc;AACjD,eAAW,eAAe;AAC1B,QAAI,WAAW;AAAY,iBAAW,WAAW;AACjD,WAAO,eAAe,QAAQ,WAAW,KAAK;AAAA;AAAA;AAIlD,sBAAsB,aAAa,YAAY,aAAa;AAC1D,MAAI;AAAY,sBAAkB,YAAY,WAAW;AACzD,MAAI;AAAa,sBAAkB,aAAa;AAChD,SAAO,eAAe,aAAa,aAAa;AAAA,IAC9C,UAAU;AAAA;AAEZ,SAAO;AAAA;AAGT,mBAAmB,UAAU,YAAY;AACvC,MAAI,OAAO,eAAe,cAAc,eAAe,MAAM;AAC3D,UAAM,IAAI,UAAU;AAAA;AAGtB,WAAS,YAAY,OAAO,OAAO,cAAc,WAAW,WAAW;AAAA,IACrE,aAAa;AAAA,MACX,OAAO;AAAA,MACP,UAAU;AAAA,MACV,cAAc;AAAA;AAAA;AAGlB,SAAO,eAAe,UAAU,aAAa;AAAA,IAC3C,UAAU;AAAA;AAEZ,MAAI;AAAY,oBAAgB,UAAU;AAAA;AAG5C,yBAAyB,GAAG;AAC1B,oBAAkB,OAAO,iBAAiB,OAAO,iBAAiB,0BAAyB,IAAG;AAC5F,WAAO,GAAE,aAAa,OAAO,eAAe;AAAA;AAE9C,SAAO,gBAAgB;AAAA;AAGzB,yBAAyB,GAAG,GAAG;AAC7B,oBAAkB,OAAO,kBAAkB,0BAAyB,IAAG,IAAG;AACxE,OAAE,YAAY;AACd,WAAO;AAAA;AAGT,SAAO,gBAAgB,GAAG;AAAA;AAG5B,qCAAqC;AACnC,MAAI,OAAO,YAAY,eAAe,CAAC,QAAQ;AAAW,WAAO;AACjE,MAAI,QAAQ,UAAU;AAAM,WAAO;AACnC,MAAI,OAAO,UAAU;AAAY,WAAO;AAExC,MAAI;AACF,YAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU,SAAS,IAAI,WAAY;AAAA;AAC1E,WAAO;AAAA,WACA,GAAP;AACA,WAAO;AAAA;AAAA;AAIX,gCAAgC,MAAM;AACpC,MAAI,SAAS,QAAQ;AACnB,UAAM,IAAI,eAAe;AAAA;AAG3B,SAAO;AAAA;AAGT,oCAAoC,MAAM,MAAM;AAC9C,MAAI,QAAS,QAAO,SAAS,YAAY,OAAO,SAAS,aAAa;AACpE,WAAO;AAAA,aACE,SAAS,QAAQ;AAC1B,UAAM,IAAI,UAAU;AAAA;AAGtB,SAAO,uBAAuB;AAAA;AAGhC,sBAAsB,SAAS;AAC7B,MAAI,4BAA4B;AAEhC,SAAO,gCAAgC;AACrC,QAAI,QAAQ,gBAAgB,UACxB;AAEJ,QAAI,2BAA2B;AAC7B,UAAI,YAAY,gBAAgB,MAAM;AAEtC,eAAS,QAAQ,UAAU,OAAO,WAAW;AAAA,WACxC;AACL,eAAS,MAAM,MAAM,MAAM;AAAA;AAG7B,WAAO,2BAA2B,MAAM;AAAA;AAAA;AAI5C,wBAAwB,KAAK,GAAG;AAC9B,SAAO,gBAAgB,QAAQ,sBAAsB,KAAK,MAAM,4BAA4B,KAAK,MAAM;AAAA;AAGzG,4BAA4B,KAAK;AAC/B,SAAO,mBAAmB,QAAQ,iBAAiB,QAAQ,4BAA4B,QAAQ;AAAA;AAGjG,4BAA4B,KAAK;AAC/B,MAAI,MAAM,QAAQ;AAAM,WAAO,kBAAkB;AAAA;AAGnD,yBAAyB,KAAK;AAC5B,MAAI,MAAM,QAAQ;AAAM,WAAO;AAAA;AAGjC,0BAA0B,MAAM;AAC9B,MAAI,OAAO,WAAW,eAAe,KAAK,OAAO,aAAa,QAAQ,KAAK,iBAAiB;AAAM,WAAO,MAAM,KAAK;AAAA;AAGtH,+BAA+B,KAAK,GAAG;AACrC,MAAI,KAAK,OAAO,OAAO,OAAO,OAAO,WAAW,eAAe,IAAI,OAAO,aAAa,IAAI;AAE3F,MAAI,MAAM;AAAM;AAChB,MAAI,OAAO;AACX,MAAI,KAAK;AACT,MAAI,KAAK;AAET,MAAI,IAAI;AAER,MAAI;AACF,SAAK,KAAK,GAAG,KAAK,MAAM,CAAE,MAAM,MAAK,GAAG,QAAQ,OAAO,KAAK,MAAM;AAChE,WAAK,KAAK,GAAG;AAEb,UAAI,KAAK,KAAK,WAAW;AAAG;AAAA;AAAA,WAEvB,KAAP;AACA,SAAK;AACL,SAAK;AAAA,YACL;AACA,QAAI;AACF,UAAI,CAAC,MAAM,GAAG,aAAa;AAAM,WAAG;AAAA,cACpC;AACA,UAAI;AAAI,cAAM;AAAA;AAAA;AAIlB,SAAO;AAAA;AAGT,qCAAqC,GAAG,QAAQ;AAC9C,MAAI,CAAC;AAAG;AACR,MAAI,OAAO,MAAM;AAAU,WAAO,kBAAkB,GAAG;AACvD,MAAI,IAAI,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM,GAAG;AACnD,MAAI,MAAM,YAAY,EAAE;AAAa,QAAI,EAAE,YAAY;AACvD,MAAI,MAAM,SAAS,MAAM;AAAO,WAAO,MAAM,KAAK;AAClD,MAAI,MAAM,eAAe,2CAA2C,KAAK;AAAI,WAAO,kBAAkB,GAAG;AAAA;AAG3G,2BAA2B,KAAK,KAAK;AACnC,MAAI,OAAO,QAAQ,MAAM,IAAI;AAAQ,UAAM,IAAI;AAE/C,WAAS,IAAI,GAAG,OAAO,IAAI,MAAM,MAAM,IAAI,KAAK;AAAK,SAAK,KAAK,IAAI;AAEnE,SAAO;AAAA;AAGT,8BAA8B;AAC5B,QAAM,IAAI,UAAU;AAAA;AAGtB,4BAA4B;AAC1B,QAAM,IAAI,UAAU;AAAA;AAGtB,IAAI,QAAQ,OAAO,WAAW,eAAe,OAAO,QAAQ,OAAO,QACjE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAGF,IAAI,WAAwB,SAAU,eAAe;AACnD,YAAU,WAAU;AAEpB,MAAI,SAAS,aAAa;AAE1B,uBAAoB;AAClB,QAAI;AAEJ,QAAI,OAAO,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAC/E,QAAI,aAAa,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AACrF,QAAI,QAAQ,UAAU,SAAS,KAAK,UAAU,OAAO,SAAY,UAAU,KAAK;AAEhF,oBAAgB,MAAM;AAEtB,YAAQ,OAAO,KAAK,MAAM,IAAI,MAAM;AACpC,UAAM,QAAQ,GAAG,OAAO;AACxB,UAAM,cAAc;AACpB,UAAM,SAAS;AACf,UAAM,mBAAmB;AAEzB,UAAM,WAAW;AACjB,UAAM,eAAe;AACrB,UAAM,gBAAgB;AACtB,UAAM,eAAe;AACrB,UAAM,eAAe;AACrB,UAAM,eAAe;AACrB,UAAM,YAAY;AAClB,UAAM,YAAY;AAElB,UAAM,cAAc;AACpB,UAAM,UAAU,SAAS,cAAc;AAEvC,UAAM;AAEN,WAAO;AAAA;AAGT,eAAa,WAAU,CAAC;AAAA,IACtB,KAAK;AAAA,IACL,KAAK,eAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,MAAM;AACtB,WAAK,QAAQ;AAEb,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,KAAK,eAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,YAAY;AAC5B,WAAK,cAAc;AAEnB,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,KAAK,eAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,OAAO;AACvB,WAAK,SAAS;AAEd,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,KAAK,eAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,OAAO;AACvB,WAAK,mBAAmB;AAExB,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,KAAK,eAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,SAAS;AACzB,WAAK,WAAW;AAEhB,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,KAAK,eAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,aAAa;AAC7B,WAAK,eAAe;AAEpB,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,KAAK,eAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,cAAc;AAC9B,WAAK,gBAAgB;AAErB,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,KAAK,eAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,aAAa;AAC7B,WAAK,eAAe;AAEpB,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,KAAK,eAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,UAAU;AAC1B,WAAK,YAAY;AAEjB,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,KAAK,eAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,UAAU;AAC1B,WAAK,YAAY;AAEjB,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,KAAK,eAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,YAAY;AAC5B,WAAK,cAAc;AAEnB,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,KAAK,eAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,aAAa;AAC7B,WAAK,eAAe;AAEpB,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,KAAK,eAAe;AAClB,aAAO,KAAK;AAAA;AAAA,IAEd,KAAK,aAAa,aAAa;AAC7B,WAAK,eAAe;AAEpB,WAAK;AAAA;AAAA,KAEN;AAAA,IACD,KAAK;AAAA,IACL,OAAO,sBAAsB;AAC3B,UAAI,SAAS;AAEb,UAAI,SAAS,KAAK;AAClB,UAAI,MAAM,OAAO,WAAW;AAC5B,UAAI,SAAS,MAAM,QAAQ,KAAK,eAAe,KAAK,cAAc,CAAC,KAAK,aAAa,KAAK;AAE1F,UAAI,YAAY,OAAO,IAAI,SAAU,GAAG;AACtC,eAAO,IAAI,OAAO,WAAW;AAAA;AAG/B,UAAI,eAAe,MAAM,QAAQ,KAAK,gBAAgB,KAAK,eAAe,CAAC,KAAK,cAAc,KAAK,cAAc,KAAK,cAAc,KAAK;AAEzI,UAAI,kBAAkB,aAAa,IAAI,SAAU,GAAG;AAClD,eAAO,IAAI,OAAO,WAAW;AAAA;AAG/B,UAAI,UAAU,MAAM,QAAQ,KAAK,WAAW,KAAK,UAAU,CAAC,KAAK,SAAS,KAAK;AAE/E,UAAI,aAAa,QAAQ,IAAI,SAAU,GAAG;AACxC,eAAO,IAAI,OAAO,WAAW;AAAA;AAG/B,UAAI,QAAQ,KAAK,KAAK,MAAM;AAC5B,UAAI,OAAO,GAAG,OAAO,KAAK,YAAY,KAAK,OAAO,KAAK,UAAU,OAAO,OAAO,KAAK;AACpF,UAAI,OAAO;AAEX,UAAI,aAAa,KAAK,IAAI,MAAM,MAAM,mBAAmB,MAAM,IAAI,SAAU,MAAM;AACjF,eAAO,IAAI,YAAY,MAAM;AAAA;AAE/B,UAAI,cAAc,KAAK,WAAW,MAAM;AACxC,aAAO,QAAQ,aAAa,UAAU,KAAK,IAAI,WAAW,KAAK;AAC/D,aAAO,SAAS,cAAc,UAAU,KAAK,IAAI,WAAW,KAAK;AAEjE,UAAI,KAAK,aAAa;AACpB,YAAI,cAAc,KAAK;AAEvB,YAAI,UAAU,IAAI;AAEhB,cAAI,KAAK,UAAU,KAAK;AACxB,cAAI,YAAY,UAAU;AAC1B,cAAI;AACJ,cAAI,OAAO,IAAI,gBAAgB;AAC/B,cAAI,OAAO,IAAI,OAAO,SAAS,gBAAgB;AAC/C,cAAI,OAAO,OAAO,QAAQ,IAAI,gBAAgB;AAC9C,cAAI,OAAO,OAAO,QAAQ,IAAI,OAAO,SAAS,gBAAgB;AAC9D,cAAI;AAAA;AAGN,YAAI,UAAU,IAAI;AAEhB,cAAI,MAAM,UAAU,KAAK;AAEzB,cAAI,YAAY,UAAU;AAC1B,cAAI;AACJ,cAAI,OAAO,KAAK,IAAI,UAAU,IAAI,gBAAgB,KAAK;AACvD,cAAI,OAAO,OAAO,QAAQ,KAAK,IAAI,UAAU,IAAI,gBAAgB,KAAK;AACtE,cAAI,OAAO,KAAK,IAAI,UAAU,IAAI,gBAAgB,KAAK,OAAO,SAAS;AACvE,cAAI,OAAO,OAAO,QAAQ,KAAK,IAAI,UAAU,IAAI,gBAAgB,KAAK,OAAO,SAAS;AACtF,cAAI;AAAA;AAGN,YAAI,KAAK,cAAc;AAErB,cAAI,cAAc,KAAK,IAAI,MAAM,MAAM,mBAAmB;AAE1D,cAAI,OAAO,cAAc;AAEzB,cAAI,YAAY;AAChB,cAAI;AACJ,WAAC,CAAC,CAAC,gBAAgB,MAAM,CAAC,gBAAgB,IAAI,MAAM,MAAM,gBAAgB,KAAK,CAAC,CAAC,gBAAgB,MAAM,CAAC,OAAO,QAAQ,gBAAgB,IAAI,OAAO,QAAQ,MAAM,MAAM,gBAAgB,KAAK,CAAC,CAAC,gBAAgB,MAAM,CAAC,OAAO,QAAQ,gBAAgB,IAAI,OAAO,QAAQ,MAAM,OAAO,SAAS,MAAM,OAAO,SAAS,gBAAgB,KAAK,CAAC,CAAC,gBAAgB,MAAM,CAAC,gBAAgB,IAAI,MAAM,OAAO,SAAS,MAAM,OAAO,SAAS,gBAAgB,KAAK,OAAO,SAAU,GAAG;AACvc,mBAAO;AAAA,aACN,QAAQ,SAAU,MAAM;AACzB,gBAAI,QAAQ,eAAe,MAAM,IAC7B,KAAK,MAAM,IACX,KAAK,MAAM,IACX,KAAK,MAAM,IACX,KAAK,MAAM;AAEf,gBAAI,OAAO,IAAI;AACf,gBAAI,iBAAiB,IAAI,IAAI,IAAI;AAAA;AAEnC,cAAI;AAAA;AAAA;AAKR,UAAI,KAAK,iBAAiB;AACxB,YAAI,YAAY,KAAK;AAErB,YAAI,CAAC,KAAK,cAAc;AACtB,cAAI,SAAS,UAAU,IAAI,UAAU,IAAI,OAAO,QAAQ,UAAU,KAAK,GAAG,OAAO,SAAS,UAAU,KAAK;AAAA,eACpG;AAEL,cAAI;AACJ,cAAI,OAAO,UAAU,IAAI,gBAAgB;AACzC;AAAA,YAAC,CAAC,UAAU,IAAI,gBAAgB,IAAI,OAAO,QAAQ,gBAAgB,IAAI,UAAU,IAAI,UAAU,IAAI,UAAU;AAAA,YAC7G,CAAC,OAAO,QAAQ,UAAU,IAAI,OAAO,QAAQ,UAAU,IAAI,OAAO,QAAQ,UAAU,IAAI,UAAU,IAAI,gBAAgB,IAAI,OAAO,SAAS,gBAAgB;AAAA,YAC1J,CAAC,OAAO,QAAQ,UAAU,IAAI,OAAO,QAAQ,gBAAgB,IAAI,gBAAgB,IAAI,OAAO,SAAS,UAAU,IAAI,OAAO,SAAS,UAAU,IAAI,OAAO,SAAS,UAAU;AAAA,YAC3K,CAAC,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,OAAO,SAAS,UAAU,IAAI,OAAO,SAAS,gBAAgB,IAAI,gBAAgB;AAAA,YAC3H,QAAQ,SAAU,OAAO;AACzB,gBAAI,QAAQ,eAAe,OAAO,IAC9B,KAAK,MAAM,IACX,KAAK,MAAM,IACX,KAAK,MAAM,IACX,KAAK,MAAM,IACX,KAAK,MAAM,IACX,KAAK,MAAM;AAEf,gBAAI,iBAAiB,IAAI,IAAI,IAAI;AACjC,gBAAI,OAAO,IAAI;AAAA;AAEjB,cAAI;AACJ,cAAI;AAAA;AAAA;AAIR,UAAI,UAAU,MAAM,KAAK,mBAAmB;AAC5C,UAAI,UAAU,MAAM,KAAK,mBAAmB;AAE5C,UAAI,OAAO;AAEX,UAAI,YAAY,KAAK;AACrB,UAAI,eAAe;AACnB,UAAI,iBAAiB,KAAK,cAAc;AAExC,UAAI,gBAAgB;AAClB,YAAI,YAAY,KAAK,cAAc,KAAK,WAAW;AACnD,YAAI,cAAc,KAAK;AAAA;AAGzB,YAAM,QAAQ,SAAU,MAAM,OAAO;AACnC,YAAI,QAAS,cAAa,IAAI,YAAY,MAAM,SAAS;AACzD,YAAI,QAAS,SAAQ,KAAK,OAAO;AACjC,0BAAkB,IAAI,WAAW,MAAM,OAAO;AAC9C,YAAI,SAAS,MAAM,OAAO;AAAA;AAG5B,UAAI,KAAK,SAAS;AAAK,aAAK,SAAS,IAAI;AAEzC,UAAI,UAAU,KAAK,SAAS,MAAM,IAAI,MAAM,QAAQ;AACpD,cAAQ,YAAY,MAAM;AAC1B,cAAQ,cAAc;AACtB,UAAI,SAAS,KAAK,aAAa,MAAM,SAAS,OAAO,KAAK,IAAI,QAAQ,KAAK;AAC3E,WAAK,MAAM,IAAI,SAAS,OAAO,QAAQ,OAAO,QAAQ,QAAQ;AAAA;AAAA,KAE/D;AAAA,IACD,KAAK;AAAA,IACL,OAAO,iBAAiB;AACtB,aAAO,IAAI,KAAK,YAAY,KAAK,MAAM,KAAK,YAAY,KAAK,OAAO,KAAK;AAAA;AAAA,KAE1E;AAAA,IACD,KAAK;AAAA,IACL,OAAO,cAAc,QAAQ;AAC3B,YAAM,OAAO,UAAU,KAAK,KAAK,MAAM;AACvC,WAAK,QAAQ,OAAO;AACpB,WAAK,kBAAkB,OAAO;AAC9B,WAAK,UAAU,OAAO;AACtB,WAAK,cAAc,OAAO;AAC1B,WAAK,cAAc,OAAO;AAC1B,WAAK,WAAW,OAAO;AACvB,WAAK,WAAW,OAAO;AACvB,WAAK,aAAa,OAAO;AACzB,WAAK,cAAc,OAAO;AAC1B,WAAK,cAAc,OAAO;AAC1B,aAAO;AAAA;AAAA;AAIX,SAAO;AAAA,EACP,MAAM;;;ACrhBwE,IAAO,2BAAQ;",
  "names": []
}
